<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace Clerk\Backend\Models\Operations;


class CreateOrganizationRequestBody
{
    /**
     * The name of the new organization.
     *
     * May not contain URLs or HTML.
     *
     * @var string $name
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('name')]
    public string $name;

    /**
     * The ID of the User who will become the administrator for the new organization
     *
     * @var ?string $createdBy
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('created_by')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $createdBy = null;

    /**
     * Metadata saved on the organization, accessible only from the Backend API
     *
     * @var ?array<string, mixed> $privateMetadata
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('private_metadata')]
    #[\Speakeasy\Serializer\Annotation\Type('array<string, mixed>|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?array $privateMetadata = null;

    /**
     * Metadata saved on the organization, read-only from the Frontend API and fully accessible (read/write) from the Backend API
     *
     * @var ?array<string, mixed> $publicMetadata
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('public_metadata')]
    #[\Speakeasy\Serializer\Annotation\Type('array<string, mixed>|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?array $publicMetadata = null;

    /**
     * A slug for the new organization.
     *
     * Can contain only lowercase alphanumeric characters and the dash "-".
     * Must be unique for the instance.
     *
     * @var ?string $slug
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('slug')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $slug = null;

    /**
     * The maximum number of memberships allowed for this organization
     *
     * @var ?int $maxAllowedMemberships
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('max_allowed_memberships')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?int $maxAllowedMemberships = null;

    /**
     * A custom date/time denoting _when_ the organization was created, specified in RFC3339 format (e.g. `2012-10-20T07:15:20.902Z`).
     *
     * @var ?string $createdAt
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('created_at')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $createdAt = null;

    /**
     * @param  string  $name
     * @param  ?string  $createdBy
     * @param  ?array<string, mixed>  $privateMetadata
     * @param  ?array<string, mixed>  $publicMetadata
     * @param  ?string  $slug
     * @param  ?int  $maxAllowedMemberships
     * @param  ?string  $createdAt
     * @phpstan-pure
     */
    public function __construct(string $name, ?string $createdBy = null, ?array $privateMetadata = null, ?array $publicMetadata = null, ?string $slug = null, ?int $maxAllowedMemberships = null, ?string $createdAt = null)
    {
        $this->name = $name;
        $this->createdBy = $createdBy;
        $this->privateMetadata = $privateMetadata;
        $this->publicMetadata = $publicMetadata;
        $this->slug = $slug;
        $this->maxAllowedMemberships = $maxAllowedMemberships;
        $this->createdAt = $createdAt;
    }
}