<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace Clerk\Backend\Models\Operations;


class CreateOrganizationInvitationRequestBody
{
    /**
     * The email address of the new member that is going to be invited to the organization
     *
     * @var string $emailAddress
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('email_address')]
    public string $emailAddress;

    /**
     * The role of the new member in the organization
     *
     * @var string $role
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('role')]
    public string $role;

    /**
     * Metadata saved on the organization invitation, read-only from the Frontend API and fully accessible (read/write) from the Backend API.
     *
     * When the organization invitation is accepted, the metadata will be transferred to the newly created organization membership.
     *
     * @var ?array<string, mixed> $publicMetadata
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('public_metadata')]
    #[\Speakeasy\Serializer\Annotation\Type('array<string, mixed>|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?array $publicMetadata = null;

    /**
     * Metadata saved on the organization invitation, fully accessible (read/write) from the Backend API but not visible from the Frontend API.
     *
     * When the organization invitation is accepted, the metadata will be transferred to the newly created organization membership.
     *
     * @var ?array<string, mixed> $privateMetadata
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('private_metadata')]
    #[\Speakeasy\Serializer\Annotation\Type('array<string, mixed>|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?array $privateMetadata = null;

    /**
     * Optional URL that the invitee will be redirected to once they accept the invitation by clicking the join link in the invitation email.
     *
     * @var ?string $redirectUrl
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('redirect_url')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $redirectUrl = null;

    /**
     * The ID of the user that invites the new member to the organization.
     *
     * Must be an administrator in the organization.
     *
     * @var ?string $inviterUserId
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('inviter_user_id')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $inviterUserId = null;

    /**
     * The number of days the invitation will be valid for. By default, the invitation has a 30 days expire.
     *
     * @var ?int $expiresInDays
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('expires_in_days')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?int $expiresInDays = null;

    /**
     * @param  string  $emailAddress
     * @param  string  $role
     * @param  ?array<string, mixed>  $publicMetadata
     * @param  ?array<string, mixed>  $privateMetadata
     * @param  ?string  $redirectUrl
     * @param  ?string  $inviterUserId
     * @param  ?int  $expiresInDays
     * @phpstan-pure
     */
    public function __construct(string $emailAddress, string $role, ?array $publicMetadata = null, ?array $privateMetadata = null, ?string $redirectUrl = null, ?string $inviterUserId = null, ?int $expiresInDays = null)
    {
        $this->emailAddress = $emailAddress;
        $this->role = $role;
        $this->publicMetadata = $publicMetadata;
        $this->privateMetadata = $privateMetadata;
        $this->redirectUrl = $redirectUrl;
        $this->inviterUserId = $inviterUserId;
        $this->expiresInDays = $expiresInDays;
    }
}