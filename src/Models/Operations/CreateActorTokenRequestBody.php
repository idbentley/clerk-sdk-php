<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace Clerk\Backend\Models\Operations;


class CreateActorTokenRequestBody
{
    /**
     * The ID of the user being impersonated.
     *
     * @var string $userId
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('user_id')]
    public string $userId;

    /**
     * The actor payload. It needs to include a sub property which should contain the ID of the actor.
     *
     * This whole payload will be also included in the JWT session token.
     *
     * @var Actor $actor
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('actor')]
    #[\Speakeasy\Serializer\Annotation\Type('\Clerk\Backend\Models\Operations\Actor')]
    public Actor $actor;

    /**
     * Optional parameter to specify the life duration of the actor token in seconds.
     *
     * By default, the duration is 1 hour.
     *
     * @var ?int $expiresInSeconds
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('expires_in_seconds')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?int $expiresInSeconds = null;

    /**
     * The maximum duration that the session which will be created by the generated actor token should last.
     *
     * By default, the duration of a session created via an actor token, lasts 30 minutes.
     *
     * @var ?int $sessionMaxDurationInSeconds
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('session_max_duration_in_seconds')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?int $sessionMaxDurationInSeconds = null;

    /**
     * @param  string  $userId
     * @param  Actor  $actor
     * @param  ?int  $expiresInSeconds
     * @param  ?int  $sessionMaxDurationInSeconds
     * @phpstan-pure
     */
    public function __construct(string $userId, Actor $actor, ?int $expiresInSeconds = 3600, ?int $sessionMaxDurationInSeconds = 1800)
    {
        $this->userId = $userId;
        $this->actor = $actor;
        $this->expiresInSeconds = $expiresInSeconds;
        $this->sessionMaxDurationInSeconds = $sessionMaxDurationInSeconds;
    }
}