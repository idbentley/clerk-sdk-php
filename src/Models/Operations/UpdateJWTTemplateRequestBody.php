<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace Clerk\Backend\Models\Operations;


class UpdateJWTTemplateRequestBody
{
    /**
     * JWT template name
     *
     * @var ?string $name
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('name')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $name = null;

    /**
     * JWT template claims in JSON format
     *
     * @var ?UpdateJWTTemplateClaims $claims
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('claims')]
    #[\Speakeasy\Serializer\Annotation\Type('\Clerk\Backend\Models\Operations\UpdateJWTTemplateClaims|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?UpdateJWTTemplateClaims $claims = null;

    /**
     * Whether a custom signing key/algorithm is also provided for this template
     *
     * @var ?bool $customSigningKey
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('custom_signing_key')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?bool $customSigningKey = null;

    /**
     * JWT token lifetime
     *
     * @var ?float $lifetime
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('lifetime')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?float $lifetime = null;

    /**
     * JWT token allowed clock skew
     *
     * @var ?float $allowedClockSkew
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('allowed_clock_skew')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?float $allowedClockSkew = null;

    /**
     * The custom signing algorithm to use when minting JWTs
     *
     * @var ?string $signingAlgorithm
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('signing_algorithm')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $signingAlgorithm = null;

    /**
     * The custom signing private key to use when minting JWTs
     *
     * @var ?string $signingKey
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('signing_key')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $signingKey = null;

    /**
     * @param  ?string  $name
     * @param  ?UpdateJWTTemplateClaims  $claims
     * @param  ?bool  $customSigningKey
     * @param  ?float  $lifetime
     * @param  ?float  $allowedClockSkew
     * @param  ?string  $signingAlgorithm
     * @param  ?string  $signingKey
     * @phpstan-pure
     */
    public function __construct(?string $name = null, ?UpdateJWTTemplateClaims $claims = null, ?bool $customSigningKey = null, ?float $lifetime = null, ?float $allowedClockSkew = null, ?string $signingAlgorithm = null, ?string $signingKey = null)
    {
        $this->name = $name;
        $this->claims = $claims;
        $this->customSigningKey = $customSigningKey;
        $this->lifetime = $lifetime;
        $this->allowedClockSkew = $allowedClockSkew;
        $this->signingAlgorithm = $signingAlgorithm;
        $this->signingKey = $signingKey;
    }
}